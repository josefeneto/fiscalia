# ============================================
# FISCALIA - Configura√ß√£o M√≠nima
# ============================================
#
# Copie este arquivo para .env e configure apenas o essencial
# Todo o resto usa valores padr√£o inteligentes
#

# ==================== OBRIGAT√ìRIO ====================
# Configure PELO MENOS UMA destas op√ß√µes:

# Op√ß√£o 1: Groq (recomendado - gratuito)
# GROQ_API_KEY=your-groq-key-here
# GROQ_MODEL=groq/llama-3.3-70b-versatile  # (opcional - j√° √© o padr√£o)

# Op√ß√£o 2: OpenAI
OPENAI_API_KEY=your-openai-key-here
# OPENAI_MODEL=gpt-4o-mini  # (opcional - j√° √© o padr√£o)


# ==================== OPCIONAL ====================
# S√≥ configure se quiser mudar os padr√µes

# Para Railway com PostgreSQL (altamente recomendado em produ√ß√£o)
# DATABASE_URL=postgresql://user:password@host:port/database

# Limites de processamento (valores padr√£o j√° funcionam bem)
# MAX_FILES_PER_BATCH=100
# MAX_FILE_SIZE_MB=50
# PROCESSING_TIMEOUT=600

# Ambiente (detecta automaticamente, mas pode for√ßar)
# ENVIRONMENT=development  # ou production


# ==================== N√ÉO PRECISA CONFIGURAR ====================
# Estes s√£o detectados/configurados automaticamente:
# 
# - Paths de arquivos (criados automaticamente)
# - Database SQLite (criado automaticamente em data/)
# - Streamlit port/address (defaults funcionam)
# - Logging level (INFO em prod, DEBUG em dev)
# - Railway volume mount (detectado automaticamente)
#
# O sistema funciona "out of the box" com apenas a API key!


# ==================== QUICK START ====================
# 
# 1. DESENVOLVIMENTO LOCAL:
#    - Copie este arquivo: cp .env.example .env
#    - Adicione sua GROQ_API_KEY ou OPENAI_API_KEY
#    - Rode: python run_streamlit.py
#    - Pronto! ‚úÖ
#
# 2. RAILWAY (PRODU√á√ÉO):
#    - No Railway, adicione apenas 2 vari√°veis:
#      * GROQ_API_KEY (ou OPENAI_API_KEY)
#      * DATABASE_URL (se quiser PostgreSQL)
#    - Railway detecta tudo automaticamente
#    - Deploy! üöÄ
